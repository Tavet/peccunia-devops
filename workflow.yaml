resources:
# Automation scripts repo
  - name: devops
    type: gitRepo
    integration: "dr_gh"
    versionTemplate:
      sourceName: "Peccunia/devops"
      branch: master

# Output of Packer Image Build
  - name: aws_ami_pack_info
    type: params
    versionTemplate:
      params:
        SEED: true

jobs:
# Build AWS AMI with Packer
  - name: build_aws_ami_pack
    type: runSh
    integrations:
      - dr_aws
    steps:
      - IN: aws_ami_pack_repo
      - IN: aws_vpc_tf_info
        switch: off
      - IN: aws_vpc_tf_state
        switch: off
      - TASK:
          name: build_ami
          runtime:
            options:
              env:
                #- vpc_id: "implicitly set from aws_vpc_tf_info"
                - vpc_region: "us-west-2"
                #- vpc_public_sg_id: "implicitly set from aws_vpc_tf_info"
                #- vpc_public_sn_id: "implicitly set from aws_vpc_tf_info"
                #- source_ami: "ami-43a15f3e"
                - instance_type: "t2.micro"
          script:
            - pushd $(shipctl get_resource_state "aws_ami_pack_repo")
            - export AWS_ACCESS_KEY_ID=$(shipctl get_integration_field dr_aws "accessKey")
            - export AWS_SECRET_ACCESS_KEY=$(shipctl get_integration_field dr_aws "secretKey")
            - shipctl replace vars.json
            - packer validate -var-file=vars.json k8s-microservices/k8s_packer_master.json
            - packer build -var-file=vars.json k8s-microservices/k8s_packer_master.json
            - AMI_ID=$(shipctl get_json_value manifest.json builds[0].artifact_id | cut -d':' -f 2)
      - OUT: aws_ami_pack_info
        overwrite: true
    on_success:
      script:
        - shipctl post_resource_state aws_ami_pack_info versionName $AMI_ID
        - popd
    flags:
      - aws_ami
      - aws
      - packer